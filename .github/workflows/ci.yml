name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: '3.6'
            image: 'python:3.6-slim'
          - python-version: '3.7'
            image: 'python:3.7-slim'
          - python-version: '3.8'
            image: 'python:3.8-slim'
          - python-version: '3.9'
            image: 'python:3.9-slim'
          - python-version: '3.10'
            image: 'python:3.10-slim'
          - python-version: '3.11'
            image: 'python:3.11-slim'

    container:
      image: ${{ matrix.image }}

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install pytest pytest-cov
        pip install flake8 black pyyaml

    - name: Lint with flake8
      run: |
        flake8 src/taskpanel tests/ --config=.flake8

    - name: Check code formatting with black
      run: |
        black --check --diff --line-length=88 src/taskpanel/ tests/

    - name: Install package
      run: |
        pip install -e .

    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=src/taskpanel --cov-report=xml --cov-report=term

    - name: Install Git and GPG for Codecov
      if: matrix.python-version == '3.11'
      run: |
        apt-get update
        apt-get install -y git gpg curl

  build:
    needs: test
    runs-on: ubuntu-latest
    container: python:3.6-slim

    steps:
    - uses: actions/checkout@v4
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build
    - name: Check package
      run: twine check dist/*
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  security:
    needs: test
    runs-on: ubuntu-latest
    container: python:3.9-slim

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies for security check
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install safety
    - name: Run safety checks
      run: |
        safety check